---
const { variant = "primary", size = "medium" } = Astro.props;

const buttonStyling = "px-6 p-2 font-semibold transition duration-300 uppercase";

const variantClasses = {
  primary: "main-button bg-blue-600 text-gray-50 hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-400",
};

const sizeClasses = {
  large: "text-2xl",
  medium: "text-xl",
  small: "text-[16.5px]",
};
---

<button class:list={[buttonStyling, variantClasses[variant], sizeClasses[size]]}><slot button /></button>

<style>
  /* Base button styling */
  .main-button {
    position: relative;
    overflow: hidden;
    color: #f6f6f6;
    transition: background-color 0.6s ease;
  }

  /* Shine animation base */
  .main-button::before {
    content: "";
    position: absolute;
    top: 0;
    left: -75%;
    width: 50%;
    height: 100%;
    background: linear-gradient(120deg, rgba(255, 255, 255, 0.2) 0%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.2) 100%);
    transform: skewX(-20deg);
    transition: left 0.5s ease;
    z-index: 0;
  }

  .main-button:hover::before {
    left: 125%;
  }

  .main-button span {
    position: relative;
    z-index: 1;
  }

  /* Light mode colors */
  .main-button {
    background-color: #034f9a;
  }

  .main-button:hover {
    background-color: #0268c7;
  }

  /* Dark mode overrides */
  body.dark .main-button {
    background-color: #0e86e9;
  }

  body.dark .main-button:hover {
    background-color: #4e94fd;
  }

  /* Optional: slightly brighter shine for dark mode */
  body.dark .main-button::before {
    background: linear-gradient(120deg, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.5) 50%, rgba(255, 255, 255, 0.3) 100%);
  }
</style>
